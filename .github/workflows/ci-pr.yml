name: Run CI checks
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'

jobs:
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      actions: ${{ steps.filter.outputs.actions }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'
            actions:
              - '.github/workflows/**'

  backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' || needs.changes.outputs.actions == 'true'  }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - name: Install dependencies
        run: cd backend && npm ci
      - name: Check linting
        run: cd backend && npm run lint
      - name: Check formatting
        run: cd backend && npm run prettier
      - name: Run test coverage
        run: cd backend && npm run test:coverage
      - name: Report results to DeepSource
        run: |
          curl https://deepsource.io/cli | sh
          ./bin/deepsource report --analyzer test-coverage --key javascript --value-file ./backend/coverage/cobertura-coverage.xml
        env:
          DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}

  frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' || needs.changes.outputs.actions == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - name: Install dependencies
        run: cd frontend && npm ci
      - name: Check linting
        run: cd frontend && npm run lint
      - name: Check formatting
        run: cd frontend && npm run prettier
