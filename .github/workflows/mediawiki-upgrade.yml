name: Upgrade Mediawiki Environments

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to upgrade'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - prod

jobs:
  upgrade:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Upgrade environment
      uses: appleboy/ssh-action@master
      env:
        MW_SUDO_PWD: ${{ secrets.MW_SUDO_PWD }}
      with:
        host: ${{ vars.MEDIAWIKI_DEMO_HOST }}
        key: ${{ secrets.MEDIAWIKI_DEMO_PRIVATE_SSH }}
        username: ${{ secrets.MEDIAWIKI_DEMO_USERNAME }}
        envs: MW_SUDO_PWD
        script: |
          #######################################################################

          if [ "${{ github.event.inputs.environment }}" = "dev" ]; then
            export environments=("dev")
          elif [ "${{ github.event.inputs.environment }}" = "qa" ]; then
            export environments=("demo")
          elif [ "${{ github.event.inputs.environment }}" = "prod" ]; then
            export environments=("prod")
          fi

          mediawiki_password="${MW_SUDO_PWD}"
          export languages=("fr" "en")
          export mediawiki_password
          user="wiki-user"
          dump_path="dump"
          curl -s "https://en.wikipedia.org/wiki/Special:Version" > /home/$user/version_page.html
          mediawiki_version=$(grep -oP 'MediaWiki\s\d+\.\d+\.\d+(-wmf\.\d+)?' /home/$user/version_page.html | head -n1 | awk '{print $2}')


          echo "Upgrading ${{ github.event.inputs.environment }} environment..."

          #######################################################################
          set -e
          ulimit -n 9999
          #check_job_queue() {
          #    local environment=$1
          #    local lang=$2
          #    local result

          #    # Run the PHP script and capture the output
          #    result=$(echo $mediawiki_password | sudo -S -u www-data bash -c "/usr/bin/php /var/www/wiki-$environment/wiki/$lang/maintenance/runJobs.php")

          #    # Check if the result contains Job queue is empty.
          #    if [[ "$result" == "Job queue is empty." ]]; then
          #        return 0
          #    else
          #        return 1
          #    fi
          #}

          #echo -e "\e[1;35mClear Pending Jobs\e[0m"
          #for environment in "${environments[@]}"; do
          #    for lang in "${languages[@]}"; do
          #        while true; do
          #            if check_job_queue "$environment" "$lang"; then
          #                echo "Job queue is empty for $environment-$lang."
          #                break
          #            else
          #                echo "Running jobs for $environment-$lang. Queue not empty, re-checking..."
          #                # 5 sec sleep to avoid hammering the server
          #                sleep 5
          #            fi
          #        done
          #    done
          #done

          #echo -e "\e[1;35mBackup old db dump folder\e[0m"
          #cp -r /home/$user/$dump_path /home/$user/$dump_path.old
          #rm /home/$user/$dump_path/*
                    
          #echo -e "\e[1;35mCreate Database dumps\e[0m"
          #for environment in "${environments[@]}"; do
           #   for lang in "${languages[@]}"; do
           #       echo $mediawiki_password | sudo -S mysqldump -u root "$environment"_wiki_"$lang" > /home/$user/$dump_path/$environment-dump-$lang.sql
           #   done
          #done
          
          #echo -e "\e[1;35mBackup old mediawiki folders\e[0m"
          #for environment in "${environments[@]}"; do
          #    for lang in "${languages[@]}"; do
          #        mv /var/www/wiki-$environment/wiki/$lang /var/www/wiki-$environment/wiki/$lang.old
          #    done
          #done
          
          #echo -e "\e[1;35mDownload new mediawiki package\e[0m"
          #for environment in "${environments[@]}"; do
          #    for lang in "${languages[@]}"; do
          #        git clone https://gerrit.wikimedia.org/r/mediawiki/core.git --branch wmf/$mediawiki_version /var/www/wiki-$environment/wiki/$lang
          #    done
          #done
          
          #echo -e "\e[1;35mIncrease Api Timeout\e[0m"
          #for environment in "${environments[@]}"; do
          #    for lang in "${languages[@]}"; do
          #        sed -i 's/30 \* 1000/600 * 1000/' /var/www/wiki-$environment/wiki/$lang/resources/src/mediawiki.api/index.js
          #    done
          #done
          
          #echo -e "\e[1;35mInstall Additional extensions\e[0m"
          ## PageForms
          #for environment in "${environments[@]}"; do
          #    for lang in "${languages[@]}"; do
          #         git clone https://gerrit.wikimedia.org/r/mediawiki/extensions/PageForms.git /var/www/wiki-$environment/wiki/$lang/extensions/PageForms
          #    done
          #done
          
          ## ExternalData
          #for environment in "${environments[@]}"; do
          #    for lang in "${languages[@]}"; do
          #         git clone https://gerrit.wikimedia.org/r/mediawiki/extensions/ExternalData /var/www/wiki-$environment/wiki/$lang/extensions/ExternalData
          #    done
          #done
          
          ## RegularToolTips
          #for environment in "${environments[@]}"; do
          #    for lang in "${languages[@]}"; do
          #         git clone https://gerrit.wikimedia.org/r/mediawiki/extensions/RegularTooltips.git /var/www/wiki-$environment/wiki/$lang/extensions/RegularTooltips
          #    done
          #done
          
          ## HTMLTags
          #for environment in "${environments[@]}"; do
          #    for lang in "${languages[@]}"; do
          #         git clone https://gerrit.wikimedia.org/r/mediawiki/extensions/HTMLTags.git /var/www/wiki-$environment/wiki/$lang/extensions/HTMLTags
          #    done
          #done
          
          echo -e "\e[1;35mUpdate extensions to latest branch changes & fetch external libraries\e[0m"
          for environment in "${environments[@]}"; do
              for lang in "${languages[@]}"; do
                  cd /var/www/wiki-$environment/wiki/$lang
                  git submodule update --init --recursive # update extensions
                  composer update --no-dev # fetch external libs
              done
          done
          
          echo -e "\e[1;35mCopy old configuration to the new installation directories\e[0m"
          for environment in "${environments[@]}"; do
              for lang in "${languages[@]}"; do
                  cp /var/www/wiki-$environment/wiki/$lang.old/LocalSettings.php /var/www/wiki-$environment/wiki/$lang/LocalSettings.php
                  cp -r /var/www/wiki-$environment/wiki/$lang.old/images /var/www/wiki-$environment/wiki/$lang
                  cp -r /var/www/wiki-$environment/wiki/$lang.old/resources/assets/icons /var/www/wiki-$environment/wiki/$lang/resources/assets/icons
                  cp /var/www/wiki-$environment/wiki/$lang.old/resources/assets/poweredby_wikiadviser_*.png /var/www/wiki-$environment/wiki/$lang/resources/assets/
                  echo $mediawiki_password | sudo -S chown -R www-data:www-data /var/www/wiki-$environment/wiki/$lang/images
                  cp -r /home/$user/wikiadviser/MyVisualEditor /var/www/wiki-$environment/wiki/$lang/extensions/MyVisualEditor
              done
          done
          
          echo -e "\e[1;35mSetup wikibase\e[0m"
          for environment in "${environments[@]}"; do
              for lang in "${languages[@]}"; do
                  cd /var/www/wiki-$environment/wiki/$lang/
                  rm composer.lock
                  mv composer.local.json-sample composer.local.json
                  composer install --no-dev --no-interaction
                  php maintenance/run.php ./maintenance/update.php
                  php maintenance/run.php ./extensions/Wikibase/lib/maintenance/populateSitesTable.php
                  php maintenance/run.php ./extensions/Wikibase/repo/maintenance/rebuildItemsPerSite.php
                  php maintenance/run.php ./maintenance/populateInterwiki.php
              done
          done
          
          echo -e "\e[1;35mRemove unnecessary files\e[0m"
          rm /home/$user/version_page.html
          
          echo -e "\e[1;35mRestarting web server...\e[0m"
          echo $mediawiki_password | sudo -S systemctl restart php8.1-fpm.service


