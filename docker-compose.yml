version: "3.1"

services:
  wikiadviser-api:
    image: wikiadviser-api:git
    container_name: wikiadviser-api
    build:
      context: backend
    env_file:
      - .env
    ports:
      - ${WIKIADVISER_API_PORT}:${WIKIADVISER_API_PORT}

  wikiadviser-application:
    image: wikiadviser-application:git
    container_name: wikiadviser-application
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    build:
      context: frontend
      args:
        WIKIADVISER_API_HOST: ${WIKIADVISER_API_HOST}
        SUPABASE_PROJECT_URL: ${SUPABASE_PROJECT_URL}
        SUPABASE_SECRET_PROJECT_TOKEN: ${SUPABASE_SECRET_PROJECT_TOKEN}
    ports:
      - 8020:80
    depends_on:
      - wikiadviser-api

  mw-db:
    image: docker.io/library/mysql:8.0
    command: --default-authentication-plugin=mysql_native_password --expire_logs_days=3 --secure-file-priv=""
    cap_add:
      - SYS_NICE # CAP_SYS_NICE, fix error mbind: Operation not permitted
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD:-mediawiki}
      - MYSQL_DATABASE=mediawiki
    volumes:
      - ./mediawiki/_initdb:/docker-entrypoint-initdb.d
      - mw-mysql-data-volume:/var/lib/mysql
      - ./mediawiki/my.cnf:/etc/my.cnf

  mw-web:
    image: ghcr.io/canastawiki/canasta:latest
    restart: unless-stopped
    extra_hosts:
      - "gateway.docker.internal:host-gateway"
    depends_on:
      - mw-db
      - mw-elasticsearch
    environment:
      # Sourced from .env
      - MW_SITE_SERVER=${MW_SITE_SERVER:-http://localhost}
      - PHP_UPLOAD_MAX_FILESIZE=${PHP_UPLOAD_MAX_FILESIZE:-10M}
      - PHP_POST_MAX_SIZE=${PHP_UPLOAD_MAX_FILESIZE:-10M}
      - PHP_MAX_INPUT_VARS=${PHP_MAX_INPUT_VARS:-1000}
      - MW_SITEMAP_SUBDIR
      - MW_SITEMAP_IDENTIFIER
    volumes:
      - ./mediawiki/extensions:/var/www/mediawiki/w/user-extensions
      - ./mediawiki/skins:/var/www/mediawiki/w/user-skins
      - ./mediawiki/config:/mediawiki/config
      - ./mediawiki/images:/mediawiki/images
      - mw-sitemap:/mediawiki/sitemap

  mw-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - mw-elasticsearch:/usr/share/elasticsearch/data

  mw-caddy:
    image: docker.io/library/caddy:2.4.6-alpine
    restart: unless-stopped
    entrypoint: caddy run --config /etc/caddy/Caddyfile --adapter caddyfile
    environment:
      - MW_SITE_FQDN=${MW_SITE_FQDN:-localhost}
    ports:
      - "${PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - mw-caddy-data:/data
      - ./mediawiki/config/Caddyfile:/etc/caddy/Caddyfile

  mw-varnish:
    image: docker.io/library/varnish:7.0.2-alpine
    restart: unless-stopped
    volumes:
      - ./mediawiki/config/default.vcl:/etc/varnish/default.vcl:ro
    tmpfs:
      - /var/lib/varnish:exec

volumes:
  mw-mysql-data-volume:
  mw-elasticsearch:
  mw-caddy-data:
  mw-sitemap:
