<?php
# This file was automatically generated by the MediaWiki 1.40.1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/MainConfigSchema.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "WikiAdviser";
$wgMetaNamespace = "Wikiadviser";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
## /en | /fr
$wgScriptPath = "${URL_PATH}"; 

## The protocol and server name to use in fully-qualified URLs
$wgServer = "${SERVER_ENDPOINT}";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
/* 
Copy the repo's `docs/icons` folder into mediawiki's `$wgResourceBasePath/resources/assets`
$wgResourceBasePath is where your mediawiki instance is installed. 
*/
$wgLogos = [
	'1x' => "$wgResourceBasePath/resources/assets/icons/logo.svg",
	'icon' => "$wgResourceBasePath/resources/assets/icons/logo.svg",
];
$wgFavicon = "$wgResourceBasePath/resources/assets/icons/favicon.ico";

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "";
$wgPasswordSender = "";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "localhost";
$wgDBname = "${DB_NAME}";
$wgDBuser = "${DB_USER}";
$wgDBpassword = "${DB_PASSWORD}";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";
# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = true;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

# Site language code, should be one of the list in ./includes/languages/data/Names.php
# en | fr
$wgLanguageCode = "${LANGUAGE}";

# Time zone
$wgLocaltimezone = "UTC";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

$wgSecretKey = "ba10adfed2a242939162f7e5bc08131be7b5d6e240f68ec85659f6458d87846f";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "fab76d49862d1c8f";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

## Default skin: you can change the default skin. Use the internal symbolic
## names, e.g. 'vector' or 'monobook':
$wgDefaultSkin = "vector";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MinervaNeue' );
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );


# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtension( 'ExtensionName' );
# to LocalSettings.php. Check specific extension documentation for more details.
# The following extensions were automatically enabled:
wfLoadExtension( 'Interwiki' );


# End of automatically generated settings.
# Add more configuration options below.

$wgDefaultSkin = "vector-2022";
wfLoadExtension( 'MyVisualEditor' );
$wgVisualEditorEnableDiffPage = true;
$wgDefaultRobotPolicy = 'noindex,nofollow'; // To avoid indexing the wiki by search engines.
wfLoadExtension( 'UniversalLanguageSelector' );

/* Templates & Modules */
// https://www.mediawiki.org/wiki/Manual:Importing_Wikipedia_infoboxes_tutorial
// https://www.mediawiki.org/wiki/Help:Templates

wfLoadExtension( 'ParserFunctions' );
$wgPFEnableStringFunctions = true;

wfLoadExtension( 'Scribunto' );
$wgScribuntoDefaultEngine = 'luastandalone';
$wgScribuntoEngineConf['luastandalone']['cpuLimit'] = 60; // 1 minute
$wgScribuntoEngineConf['luastandalone']['memoryLimit'] = 838860800; // 800M
$wgMemoryLimit = '800M';
$wgMaxShellFileSize = 838860800; // 800M
$wgMaxShellTime = 10 * 60 * 1000; // 10 minutes

wfLoadExtension( 'TemplateStyles' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'TemplateData' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );

$wgUseInstantCommons = true;

wfLoadExtension( 'Cite' );
wfLoadExtension( 'PageForms' );

/* Mediawiki Performance tuning */
// https://www.mediawiki.org/wiki/Manual:Performance_tuning
// https://www.mediawiki.org/wiki/User:Ilmari_Karonen/Performance_tuning

// Cache & Lifetime (2 years)
$wgMainCacheType = CACHE_ACCEL;
$wgMessageCacheType = CACHE_ACCEL;
$wgParserCacheType = CACHE_DB;

$wgParserCacheExpireTime = 63072000;
$wgRevisionCacheExpiry = 63072000;
$wgResourceLoaderMaxage = [
'versioned' => 63072000,
'unversioned' => 63072000
];

wfLoadExtension( 'WikibaseRepository', "$IP/extensions/Wikibase/extension-repo.json" );
require_once "$IP/extensions/Wikibase/repo/ExampleSettings.php";

wfLoadExtension( 'WikibaseClient', "$IP/extensions/Wikibase/extension-client.json" );
require_once "$IP/extensions/Wikibase/client/ExampleSettings.php";
$wgWBRepoSettings['allowEntityImport'] = true;

$wgShowExceptionDetails = true;
$wgExternalLinkTarget = '_blank';


# Enable parsoid API
wfLoadExtension( 'Parsoid', "$IP/vendor/wikimedia/parsoid/extension.json" );

# Parser Hooks Extensions #####################################
wfLoadExtension( 'Babel' );
wfLoadExtension( 'CategoryTree' );
wfLoadExtension( 'CharInsert' );
wfLoadExtension( "timeline" );

$wgTimelinePloticusCommand = "/usr/bin/ploticus";
$wgTimelinePerlCommand = "/usr/bin/perl";
$wgTimelineFontDirectory = "/usr/share/fonts/truetype/freefont";
putenv("GDFONTPATH=/usr/share/fonts/truetype/freefont");

wfLoadExtension( 'Kartographer' );
wfLoadExtension( 'JsonConfig' );
wfLoadExtension( 'ImageMap' );
wfLoadExtension( 'LabeledSectionTransclusion' );
wfLoadExtension( 'Math' );
wfLoadExtension( 'PageAssessments' );
wfLoadExtension( 'Phonos' );
wfLoadExtension( 'Poem' );
wfLoadExtension( 'wikihiero' );
wfLoadExtension( 'GeoData' );
##############################################################

wfLoadExtension( 'Gadgets' );

# Enable DisplayTitle as different than Article's ID
$wgAllowDisplayTitle = true;
$wgRestrictDisplayTitle = false;
